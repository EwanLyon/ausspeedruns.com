{"version":3,"sources":["components/Navbar/Navbar.tsx","components/Button/Button.tsx","components/Heroblock/Heroblock.tsx","styles/img/bblue-blue.png","components/EventDetails/EventDetails.tsx","components/Tiles/Tile.tsx","components/Tiles/TileGroup.tsx","components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","useState","isOpen","setIsOpen","isMobile","setIsMobile","windowSize","width","undefined","height","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","className","href","onClick","aria-expanded","valueOf","icon","faTimes","faBars","aria-label","faCalendarAlt","faUsers","faTwitch","faTwitter","faYoutube","faDiscord","Button","actionText","link","iconLeft","iconRight","colorScheme","Heroblock","date","Date","parse","renderer","days","hours","minutes","seconds","milliseconds","completed","aria-hidden","zeroPad","zeroPadTime","faChevronRight","EventDetails","src","beyondBlue","alt","Tile","title","description","cta","anchor","id","TileGroup","tiles","map","tile","key","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0611f2a1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Navbar.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitch,\n  faTwitter,\n  faDiscord,\n  faYoutube,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faBars, faCalendarAlt, faTimes, faUsers } from \"@fortawesome/free-solid-svg-icons\"\n\n// Define general type for useWindowSize hook, which includes width and height\ninterface Size {\n  width: number | undefined;\n  height: number | undefined;\n}\n\nconst Navbar = () => {\n  const [isOpen, setIsOpen] = useState<Boolean>(false);\n  const [isMobile, setIsMobile] = useState<Boolean>(true);\n  const windowSize: Size = useWindowSize();\n\n  useEffect(() => {\n    if (windowSize.width)\n      setIsMobile(windowSize.width < 768);\n  }, [windowSize]);\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"content\">\n        <div className=\"title\">\n          <a href=\"/\">\n            <span className=\"logo\"></span>\n            <h1>AusSpeedruns</h1>\n          </a>\n        </div>\n        <button className=\"menu-toggle\" onClick={() => setIsOpen(!isOpen)} aria-expanded={isOpen.valueOf()}>\n          { !isOpen ? (\n          <FontAwesomeIcon icon={faBars} />\n          ) : (\n            <FontAwesomeIcon icon={faTimes} />\n          )}\n          <span className=\"sr-only\">Menu</span>\n        </button>\n        { isMobile ? (<div className=\"break\"></div>\n        ) : ''}\n\n        <nav className={`main-menu ${isOpen ? 'menu-open' : 'menu-closed'}`} aria-label=\"Main menu\">\n          <ul>\n            <li>\n              <a href=\"http://schedule.ausspeedruns.com\">\n                { isMobile ? (<FontAwesomeIcon icon={faCalendarAlt} />) : '' }\n                <span className=\"text\">Schedule</span>\n              </a>\n            </li>\n            {/* <li><a href=\"//incentives.ausspeedruns.com\">Incentives</a></li> */}\n            <li>\n              <a href=\"#participate\">\n                { isMobile ? (<FontAwesomeIcon icon={faUsers} />) : '' }\n                <span className=\"text\">Get Involved</span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href=\"//www.twitch.tv/ausspeedruns\">\n                <FontAwesomeIcon icon={faTwitch} />\n                <span className={`text ${isMobile ? '' : 'sr-only'}`}>Follow us on Twitch</span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href=\"//twitter.com/ausspeedruns\">\n                <FontAwesomeIcon icon={faTwitter} />\n                <span className={`text ${isMobile ? '' : 'sr-only'}`}>Follow us on Twitter</span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href=\"//youtube.com/ausspeedruns\">\n                <FontAwesomeIcon icon={faYoutube} />\n                <span className={`text ${isMobile ? '' : 'sr-only'}`}>Subscribe to AusSpeedruns on Youtube</span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href=\"http://discord.ausspeedruns.com/\">\n                <FontAwesomeIcon icon={faDiscord} />\n                <span className={`text ${isMobile ? '' : 'sr-only'}`}>Join us on Discord</span>\n              </a>\n            </li>\n            {/* <li><a className=\"button secondary\" href=\"//fundraise.beyondblue.org.au/asm2021\">Donate</a></li> */}\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\n// Hook\nfunction useWindowSize(): Size {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<Size>({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\nexport default Navbar;\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Button.scss\";\n\nexport type ButtonProps = {\n  actionText: string,\n  link: string,\n  iconLeft?: IconProp,\n  iconRight?: IconProp,\n  colorScheme?: \"primary\" | \"secondary\" | \"secondary inverted\" | \"primary lightHover\"\n}\n\nconst Button = ({actionText, link, iconLeft, iconRight, colorScheme = \"primary\"} : ButtonProps) => {\n  return (\n    <a className={`button ${colorScheme}`} href={link}>\n      { iconLeft && (<FontAwesomeIcon icon={iconLeft} />)}\n      <span>{ actionText }</span>\n      { iconRight && (<FontAwesomeIcon icon={iconRight} />)}\n    </a>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./Heroblock.scss\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport Countdown, { zeroPad, CountdownRenderProps } from \"react-countdown\";\nimport Button from \"../Button/Button\";\n// import TwitchEmbed from \"./TwitchEmbed\";\n\nconst Heroblock = () => {\n  const countdownRender = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    completed,\n  }: CountdownRenderProps) => {\n    if (completed) return <span></span>;\n    else if (days > 0)\n      return (\n        <span>\n          <span className=\"sr-only\">\n            {days} days, {hours} hours, {minutes} minutes and {seconds} seconds\n            remaining\n          </span>\n          <span aria-hidden>\n            {zeroPad(days)}:{zeroPad(hours)}:{zeroPad(minutes)}:\n            {zeroPad(seconds)}\n          </span>\n        </span>\n      );\n    else if (hours > 0)\n      return (\n        <span>\n          <span className=\"sr-only\">\n            {hours} hours, {minutes} minutes and {seconds} seconds remaining\n          </span>\n          <span aria-hidden>\n            {zeroPad(hours)}:{zeroPad(minutes)}:{zeroPad(seconds)}\n          </span>\n        </span>\n      );\n    else\n      return (\n        <span>\n          <span className=\"sr-only\">\n            {minutes} minutes, {seconds} seconds and {milliseconds} milliseconds\n            remaining\n          </span>\n          <span aria-hidden>\n            {zeroPad(minutes)}:{zeroPad(seconds)}:{zeroPad(milliseconds)}\n          </span>\n        </span>\n      );\n  };\n\n  return (\n    <div className=\"heroblock\">\n      <div className=\"content\">\n        {/* <TwitchEmbed channel=\"ausspeedruns\" parent={window.location.hostname}/> */}\n        <div className=\"ctaBlock\">\n          <h1>Australian Speedrun Marathon 2021</h1>\n          <h2>July 14th - 18th</h2>\n          <h3 className=\"countdown monospaced\">\n            <Countdown\n              date={Date.parse(\"14 July 2021 11:00:00 GMT+1100\")}\n              renderer={countdownRender}\n              zeroPadTime={2}\n            />\n          </h3>\n          <p>\n            Australian Speedrunners come together to raise money for Beyond Blue\n            at ASM2021!\n          </p>\n          {/* <a className=\"button primary\" href=\"//fundraise.beyondblue.org.au/asm2021\">Donate <FontAwesomeIcon icon={ faChevronRight } /></a> */}\n          <Button actionText=\"Get Involved\" link=\"#participate\" iconRight={ faChevronRight} colorScheme={\"primary lightHover\"}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Heroblock;\n","export default __webpack_public_path__ + \"static/media/bblue-blue.123d3c18.png\";","import React from \"react\";\nimport \"./EventDetails.scss\";\nimport beyondBlue from \"../../styles/img/bblue-blue.png\";\n// import oaksHotels from \"../../styles/img/oaks-hotels.png\";\n\nconst EventDetails = () => {\n  return (\n    <div className=\"eventDetails\">\n      <div className=\"content\">\n        <h2>About AusSpeedrun Marathon 2021</h2>\n        <p>Due to COVID-19 restrictions, ASM2021 will be hosted entirely online. For more details about ticket and tshirt sales, please <a href=\"https://discord.com/invite/2xFkJta\">join our discord</a>.</p>\n        <div className=\"charitiesAndSponsors\">\n          <div className=\"charities\">\n            <div className=\"charity\">\n              <img src={beyondBlue} alt=\"Proudly supporting Beyond Blue\" />\n            </div>\n          </div>\n          <div className=\"sponsorsSection\">\n            <h3>Partners and Sponsors</h3>\n            <div className=\"sponsors\">\n              {/* <div className=\"sponsor\">\n                <img src={oaksHotels} alt=\"Proudly supporting Beyond Blue\" />\n              </div>\n              <div className=\"sponsor\">\n                <img src={oaksHotels} alt=\"Proudly supporting Beyond Blue\" />\n              </div> */}\n              <p>\n                Sponsors and donations make our events possible. If you would like\n                to sponsor us for a future event, get in touch!\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventDetails;\n","import React from \"react\";\nimport Button, { ButtonProps } from \"../Button/Button\";\n\nexport type TileProps = {\n  title: string,\n  description: string,\n  cta?: ButtonProps,\n  anchor?: string\n}\n\nconst Tile = ({title, description, cta, anchor} : TileProps) => {\n  return (\n    <div className=\"tile\" id={anchor}>\n      <h3>{title}</h3>\n      <p>{description}</p>\n      {cta && (<Button {...{...cta, colorScheme: \"secondary\"}} />)}\n    </div>\n  );\n};\n\nexport default Tile;\n","import React from \"react\";\nimport Tile, { TileProps } from \"./Tile\";\nimport \"./Tiles.scss\"\n\ntype TileGroupProps = {\n  tiles: TileProps[]\n}\n\nconst TileGroup = ({tiles} : TileGroupProps) => {\n  return (\n    <div className=\"tileGroup\">\n      <div className=\"content\">\n        { tiles.map( (tile, key) => \n          <Tile key={key} {...tile} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TileGroup;\n","import {\n  faTwitch,\n  faTwitter,\n  faYoutube,\n  faDiscord,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <div>\n      <div className=\"acknowledgement\">\n        <div className=\"content\">\n          <p>\n            In the spirit of reconciliation, Australian Speedrunners\n            acknowledges the Traditional Custodians of country throughout\n            Australia and their connections to land, sea and community. We pay\n            our respect to their elders past and present and extend that respect\n            to all Aboriginal and Torres Strait Islander peoples today.\n          </p>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <div className=\"content\">\n          <ul>\n            <li className=\"social\">\n              <a href=\"//www.twitch.tv/ausspeedruns\">\n                <FontAwesomeIcon icon={faTwitch} />\n                <span className=\"text\">Follow us on Twitch</span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href=\"//twitter.com/ausspeedruns\">\n                <FontAwesomeIcon icon={faTwitter} />\n                <span className=\"text\">Follow us on Twitter</span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href=\"http://youtube.com/ausspeedruns\">\n                <FontAwesomeIcon icon={faYoutube} />\n                <span className=\"text\">\n                  Subscribe to AusSpeedruns on Youtube\n                </span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href=\"http://discord.ausspeedruns.com/\">\n                <FontAwesomeIcon icon={faDiscord} />\n                <span className=\"text\">Join us on Discord</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Heroblock from \"./components/Heroblock/Heroblock\";\nimport EventDetails from \"./components/EventDetails/EventDetails\";\nimport TileGroup from \"./components/Tiles/TileGroup\";\nimport Footer from \"./components/Footer/Footer\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar />\n      </header>\n      <main>\n        <Heroblock />\n        <EventDetails />\n        <TileGroup tiles={[\n          {\n            title: \"About AusSpeedruns\",\n            description: \"Also known as Australian Speedrunners, AusSpeedruns is a not-for-profit organisation that brings together the best speedrunners in Australia to raise money and awareness for charity at events across Australia.\"\n          },\n          {\n            title: \"Get Involved\",\n            description: \"Submissions have closed for ASM2021 but you can still get involved in our community. Find out what's happening and keep in touch with us on our discord.\",\n            anchor: \"participate\",\n            cta: {\n              actionText: \"Join our discord\",\n              link: \"https://discord.com/invite/2xFkJta\",\n              iconLeft: faDiscord\n            }\n          },\n          {\n            title: \"Next event\",\n            description: \"Our next event will be at PAX Australia 2021. Submissions for this event will be opening in August. Follow us on Twitter or join our discord for updates.\"\n          },\n        ]} />\n      </main>\n      <footer>\n        <Footer />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}