{"version":3,"sources":["globals.ts","components/Button/Button.tsx","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","styles/img/bblue-blue.png","styles/img/Landfall_Logo_1.png","components/EventDetails/EventDetails.tsx","components/Tiles/Tile.tsx","components/Tiles/TileGroup.tsx","pages/Home/Home.tsx","components/SubmissionForm/SubmissionForm.tsx","pages/Submissions/Submissions.tsx","components/Heroblock/Heroblock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["globals","events","previous","fullName","preferredName","shortName","startDate","dates","total","charity","name","current","submissionFormUrl","website","next","donateLink","scheduleLink","incentivesLink","socialLinks","discord","twitter","youtube","twitch","facebook","Button","actionText","link","iconLeft","iconRight","colorScheme","className","href","icon","Navbar","isLive","useState","isOpen","setIsOpen","isMobile","setIsMobile","windowSize","width","undefined","height","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","onClick","aria-expanded","valueOf","faTimes","faBars","aria-label","faCalendarAlt","faCoins","faUsers","faTwitch","faTwitter","faYoutube","faDiscord","faChevronRight","Footer","EventDetails","event","src","beyondBlue","alt","landfall","Tile","title","description","ctas","anchor","console","log","id","map","cta","TileGroup","tiles","tile","key","Home","SubmissionForm","iframe","url","frameTitle","customClass","iframeId","Math","floor","random","setIframe","document","getElementById","onload","style","contentWindow","body","scrollHeight","frameBorder","Submissions","Heroblock","date","Date","parse","renderer","days","hours","minutes","seconds","milliseconds","completed","aria-hidden","zeroPad","zeroPadTime","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.edab25a0.chunk.js","sourcesContent":["import { Globals } from \"./types\";\n\nexport const globals: Globals = {\n  events: {\n    previous: {\n      fullName: 'Australian Speedrun Marathon 2021',\n      preferredName: 'AusSpeedrun Marathon 2021',\n      shortName: 'ASM2021',\n      startDate: \"14 July 2021 11:00:00 GMT+1000\",\n      dates: \"14 July - 21 July, 2021\",\n      total: \"15,000\",\n      charity: {\n        name: \"Beyond Blue\"\n      }\n    } ,\n    current: {\n      fullName: 'PAX Australia 2021',\n      preferredName: 'PAX 2021',\n      shortName: 'PAX2021',\n      startDate: \"08 October 2021 10:00:00 GMT+1100\",\n      dates: \"08 October - 10 October, 2021\",\n      // submissionFormUrl: \"https://docs.google.com/forms/d/e/1FAIpQLSc3Z17YnLnnL7bu4OHs5_8CrzCOTlV0ENiD62ezcGRjHO0AjQ/viewform?embedded=true\",\n      submissionFormUrl: \"https://horaro.org/asmpax2021/schedule\",\n      website: \"https://aus.paxsite.com\"\n    },\n    next: {\n      fullName: 'ASM 2022',\n      preferredName: 'ASM 2022',\n      shortName: 'ASM 2022',\n      dates: \"July, 2022\"\n    }\n  },\n  donateLink: 'http://donate.ausspeedruns.com/',\n  scheduleLink: 'http://schedule.ausspeedruns.com/',\n  incentivesLink: 'http://incentives.ausspeedruns.com/',\n  socialLinks: {\n    discord: 'http://discord.ausspeedruns.com/',\n    twitter: '//twitter.com/ausspeedruns',\n    youtube: '//youtube.com/ausspeedruns',\n    twitch: '//twitch.tv/ausspeedruns',\n    facebook: '//www.facebook.com/ausspeedruns'\n  }\n}","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Button.scss\";\n\nexport type ButtonProps = {\n  actionText: string,\n  link: string,\n  iconLeft?: IconProp,\n  iconRight?: IconProp,\n  colorScheme?: \"primary\" | \"secondary\" | \"primary inverted\" | \"secondary inverted\" | \"primary lightHover\"\n}\n\nconst Button = ({actionText, link, iconLeft, iconRight, colorScheme = \"primary\"} : ButtonProps) => {\n  return (\n    <a className={`button ${colorScheme}`} href={link}>\n      { iconLeft && (<FontAwesomeIcon icon={iconLeft} />)}\n      <span>{ actionText }</span>\n      { iconRight && (<FontAwesomeIcon icon={iconRight} />)}\n    </a>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Navbar.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitch,\n  faTwitter,\n  faDiscord,\n  faYoutube,\n  // faFacebook,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faBars, faCalendarAlt, faTimes, faUsers, faChevronRight, faCoins } from \"@fortawesome/free-solid-svg-icons\";\nimport { globals } from \"../../globals\";\nimport Button from \"../Button/Button\";\n\ntype NavbarProps = {\n  isLive: boolean\n}\n\n// Define general type for useWindowSize hook, which includes width and height\ninterface Size {\n  width: number | undefined;\n  height: number | undefined;\n}\n\nconst Navbar = ({ isLive } : NavbarProps) => {\n  const [isOpen, setIsOpen] = useState<Boolean>(false);\n  const [isMobile, setIsMobile] = useState<Boolean>(true);\n  const windowSize: Size = useWindowSize();\n\n  useEffect(() => {\n    if (windowSize.width)\n      setIsMobile(windowSize.width < 768);\n  }, [windowSize]);\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"content\">\n        <div className=\"title\">\n          <a href=\"/\">\n            <span className=\"logo\"></span>\n            <h1>AusSpeedruns</h1>\n          </a>\n        </div>\n        <button className=\"menu-toggle\" onClick={() => setIsOpen(!isOpen)} aria-expanded={isOpen.valueOf()}>\n          { !isOpen ? (\n          <FontAwesomeIcon icon={faBars} />\n          ) : (\n            <FontAwesomeIcon icon={faTimes} />\n          )}\n          <span className=\"sr-only\">Menu</span>\n        </button>\n        { isMobile ? (<div className=\"break\"></div>\n        ) : ''}\n\n        <nav className={`main-menu ${isOpen ? 'menu-open' : 'menu-closed'}`} aria-label=\"Main menu\">\n          <ul>\n            <li>\n              <a href={\"/#/schedule\"}>\n                { isMobile ? (<FontAwesomeIcon icon={faCalendarAlt} />) : '' }\n                <span className=\"text\">Schedule</span>\n              </a>\n            </li>\n            { isLive && <li><a href={globals.incentivesLink}>{ isMobile ? (<FontAwesomeIcon icon={faCoins} />) : '' }\n                <span className=\"text\">Incentives</span></a></li> }\n            <li>\n              <a href=\"/#participate\">\n                { isMobile ? (<FontAwesomeIcon icon={faUsers} />) : '' }\n                <span className=\"text\">Get Involved</span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href={globals.socialLinks.twitch}>\n                <FontAwesomeIcon icon={faTwitch} />\n                <span className={`text ${isMobile ? '' : 'sr-only'}`}>Follow us on Twitch</span>\n              </a>\n            </li>\n            {/* <li className=\"social\">\n              <a href={globals.socialLinks.facebook}>\n                <FontAwesomeIcon icon={faFacebook} />\n                <span className={`text ${isMobile ? '' : 'sr-only'}`}>Like us on Facebook</span>\n              </a>\n            </li> */}\n            <li className=\"social\">\n              <a href={globals.socialLinks.twitter}>\n                <FontAwesomeIcon icon={faTwitter} />\n                <span className={`text ${isMobile ? '' : 'sr-only'}`}>Follow us on Twitter</span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href={globals.socialLinks.youtube}>\n                <FontAwesomeIcon icon={faYoutube} />\n                <span className={`text ${isMobile ? '' : 'sr-only'}`}>Subscribe to AusSpeedruns on Youtube</span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href={globals.socialLinks.discord}>\n                <FontAwesomeIcon icon={faDiscord} />\n                <span className={`text ${isMobile ? '' : 'sr-only'}`}>Join us on Discord</span>\n              </a>\n            </li>\n            { isLive && <li className=\"cta\"><Button actionText=\"Donate\" link={globals.donateLink} iconRight={ faChevronRight } colorScheme={\"secondary inverted\"}/></li> }\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\n// Hook\nfunction useWindowSize(): Size {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<Size>({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\nexport default Navbar;\n","import {\n  faTwitch,\n  faTwitter,\n  faYoutube,\n  faDiscord,\n  // faFacebook,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport \"./Footer.scss\";\nimport { globals } from \"../../globals\";\n\nconst Footer = () => {\n  return (\n    <div>\n      <div className=\"acknowledgement\">\n        <div className=\"content\">\n          <p>\n            In the spirit of reconciliation, Australian Speedrunners\n            acknowledges the Traditional Custodians of country throughout\n            Australia and their connections to land, sea and community. We pay\n            our respect to their elders past and present and extend that respect\n            to all Aboriginal and Torres Strait Islander peoples today.\n          </p>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <div className=\"content\">\n          <ul>\n            <li className=\"social\">\n              <a href={globals.socialLinks.twitch}>\n                <FontAwesomeIcon icon={faTwitch} />\n                <span className=\"text\">Follow us on Twitch</span>\n              </a>\n            </li>\n            {/* <li className=\"social\">\n              <a href={globals.socialLinks.facebook}>\n                <FontAwesomeIcon icon={faFacebook} />\n                <span className=\"text\">Like us on Facebook</span>\n              </a>\n            </li> */}\n            <li className=\"social\">\n              <a href={globals.socialLinks.twitter}>\n                <FontAwesomeIcon icon={faTwitter} />\n                <span className=\"text\">Follow us on Twitter</span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href={globals.socialLinks.youtube}>\n                <FontAwesomeIcon icon={faYoutube} />\n                <span className=\"text\">\n                  Subscribe to AusSpeedruns on Youtube\n                </span>\n              </a>\n            </li>\n            <li className=\"social\">\n              <a href={globals.socialLinks.discord}>\n                <FontAwesomeIcon icon={faDiscord} />\n                <span className=\"text\">Join us on Discord</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/bblue-blue.123d3c18.png\";","export default __webpack_public_path__ + \"static/media/Landfall_Logo_1.faf135b5.png\";","import React from \"react\";\nimport \"./EventDetails.scss\";\nimport beyondBlue from \"../../styles/img/bblue-blue.png\";\n// import oaksHotels from \"../../styles/img/oaks-hotels.png\";\nimport landfall from \"../../styles/img/Landfall_Logo_1.png\";\nimport { globals } from \"../../globals\";\nimport { AusSpeedrunsEvent } from \"../../types\";\n\ntype EventDetailsProps = {\n  event: AusSpeedrunsEvent\n}\n\nconst EventDetails = ( { event } : EventDetailsProps) => {\n  return (\n    <div className=\"eventDetails\">\n      <div className=\"content\">\n        <h2>About {event.fullName}</h2>\n        {/* <p></p> */}\n        <div className=\"charitiesAndSponsors\">\n          <div className=\"charities\">\n            <h3>{event.shortName} Charity</h3>\n            <div className=\"charity\">\n              <a href={globals.donateLink}><img src={beyondBlue} alt=\"Proudly supporting Beyond Blue\" /><span className=\"sr-only\">Proudly supporting Beyond Blue</span></a>\n            </div>\n          </div>\n          <div className=\"sponsorsSection\">\n            <div className=\"sponsors\">\n            <h3>ASM2021 Sponsor</h3>\n              <div className=\"sponsor\">\n                <a href=\"https://landfall.se/\"><img src={landfall} alt=\"Sponsored by Landfall Games\" /><span className=\"sr-only\">Sponsored by Landfall Games</span></a>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p>\n          At ASM2021 we were able to raise over ${event.total} but we couldn't have done so without our incredible sponsors, volunteers, donations and support from our community. This total only includes donations made directly to Beyond Blue, and the complete total including money from Twitch subs will be updated in coming days. If you would like\n          to sponsor us for a future event, get in touch!\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default EventDetails;\n","import React from \"react\";\nimport Button, { ButtonProps } from \"../Button/Button\";\n\nexport type TileProps = {\n  title: string,\n  description: string,\n  ctas?: ButtonProps[],\n  anchor?: string,\n  colorScheme?: string\n}\n\nconst Tile = ({title, description, ctas, anchor} : TileProps) => {\n  console.log(title, ctas)\n  return (\n    <div className=\"tile\" id={anchor}>\n      <h3>{title}</h3>\n      <p>{description}</p>\n      <div className=\"ctas\">\n        {ctas && ctas.map( (cta: ButtonProps) => {\n          return (<Button {...{...cta, colorScheme: cta.colorScheme || \"secondary\"}} />)\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Tile;\n","import React from \"react\";\nimport Tile, { TileProps } from \"./Tile\";\nimport \"./Tiles.scss\"\n\ntype TileGroupProps = {\n  tiles: TileProps[]\n}\n\nconst TileGroup = ({tiles} : TileGroupProps) => {\n  return (\n    <div className=\"tileGroup\">\n      <div className=\"content\">\n        { tiles.map( (tile, key) => \n          <Tile key={key} {...tile} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TileGroup;\n","import React from \"react\";\nimport EventDetails from \"../../components/EventDetails/EventDetails\";\nimport TileGroup from \"../../components/Tiles/TileGroup\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\n// import TwitchChatEmbed from \"./components/TwitchChatEmbed/TwitchChatEmbed\";\n// import Ticker from \"./components/Ticker/Ticker\";\nimport { globals } from \"../../globals\";\nimport { AusSpeedrunsEvent, EventsLineUp } from \"../../types\";\nimport { faChevronRight, faCoins, faTicketAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Home = () => {\n  const {\n      events: {\n        previous,\n        current,\n        next\n    }\n  } = globals;\n\n  return (\n    <div>\n      <EventDetails event={previous}/>\n      <TileGroup tiles={[\n        {\n          title: \"About AusSpeedruns\",\n          description: \"Also known as Australian Speedrunners, AusSpeedruns is a not-for-profit organisation that brings together the best speedrunners in Australia to raise money and awareness for charity at events across Australia.\"\n        },\n        {\n          title: \"Get Involved\",\n          description: `The schedule for ${current.shortName} is now available!`,\n          anchor: \"participate\",\n          ctas: [\n            {\n              actionText: \"View the schedule\",\n              link: \"/#/schedule\",\n              iconRight: faChevronRight\n            },\n            {\n              actionText: \"Join our discord\",\n              link: globals.socialLinks.discord,\n              iconLeft: faDiscord,\n              colorScheme: \"primary\"\n            }\n\n          ]\n        },\n        {\n          title: \"Previous event\",\n          description: `Our last event was ${previous.fullName}, where our community helped us raise over $${previous.total} for ${previous.charity!.name}. We'd like to thank all the members of our community, our sponsors, runners and event staff for helping us run such a successful event.`\n        },\n      ]} />\n  </div>\n  )\n}\n\n\nexport default Home;","import React, { useEffect, useState } from \"react\";\nimport \"./SubmissionForm.scss\";\nimport { globals } from \"../../globals\"\n\ntype SubmissionFormProps = {\n  title?: string,\n  anchor?: string\n  iframe: { \n    url: string,\n    frameTitle: string,\n  },\n  customClass: string\n}\n\nconst SubmissionForm = ({ title, anchor = \"submissionForm\", iframe: { url, frameTitle}, customClass } : SubmissionFormProps) => {\n  const iframeId = \"iframe_\" + Math.floor(Math.random() * 1001)\n  const [iframe, setIframe] = useState<HTMLIFrameElement | null>(null)\n\n  useEffect(() => {\n    const iframe = document.getElementById(iframeId) as HTMLIFrameElement;\n    console.log(iframe);\n    if (iframe) {\n      setIframe(iframe)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (iframe)\n      iframe.onload = function(){\n        iframe.style.height = iframe.contentWindow?.document.body.scrollHeight + 'px';\n      }\n  }, [iframe])\n\n  return (\n    <div className={`eventDetails ${customClass}`} id={anchor}>\n      <div className=\"content\">\n        {title && <h2>{title}</h2>}\n        <iframe id=\"iframeId\" src={url} title={frameTitle} width=\"100%\" height=\"2000\" frameBorder=\"0\">Loading…</iframe>\n      </div>\n    </div>\n  );\n};\n\nexport default SubmissionForm;\n","import React, { useEffect } from \"react\";\nimport SubmissionForm from \"../../components/SubmissionForm/SubmissionForm\";\nimport { globals } from \"../../globals\";\n\nconst Submissions = () => {\n  useEffect(() => {\n    document.title = \"Submissions | AusSpeedruns\"\n  });\n\n  return (\n    <div>\n      <SubmissionForm \n        // title={`Submit your run for ${globals.events.current.fullName}`}\n        iframe={\n          {\n            url : globals.events.current.submissionFormUrl!,\n            frameTitle : `Submissions for ${globals.events.current.fullName}`,\n          }\n        }\n        customClass={\"scheduleEmbed\"}\n      />\n    </div>\n  )\n}\n\n\nexport default Submissions;","import React from \"react\";\nimport \"./Heroblock.scss\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport Countdown, { zeroPad, CountdownRenderProps } from \"react-countdown\";\nimport Button from \"../Button/Button\";\nimport TwitchVideoEmbed from \"../TwitchVideoEmbed/TwitchVideoEmbed\";\nimport { globals } from \"../../globals\";\nimport { AusSpeedrunsEvent } from \"../../types\";\n\ntype HeroblockProps = {\n  event: AusSpeedrunsEvent\n}\n\n\nconst Heroblock = ({event}: HeroblockProps) => {\n  const showVideoBlock = false;\n  const countdownRender = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    completed,\n  }: CountdownRenderProps) => {\n    // if (completed || (days <= 1 && hours < 1  && minutes < 20)) {\n    //   setShowVideoBlock(true)\n    // }\n\n    if (completed) return <span></span>;\n    else if (days > 0)\n      return (\n        <span>\n          <span className=\"sr-only\">\n            {days} days, {hours} hours, {minutes} minutes and {seconds} seconds\n            remaining\n          </span>\n          <span aria-hidden>\n            {zeroPad(days)}:{zeroPad(hours)}:{zeroPad(minutes)}:\n            {zeroPad(seconds)}\n          </span>\n        </span>\n      );\n    else if (hours > 0)\n      return (\n        <span>\n          <span className=\"sr-only\">\n            {hours} hours, {minutes} minutes and {seconds} seconds remaining\n          </span>\n          <span aria-hidden>\n            {zeroPad(hours)}:{zeroPad(minutes)}:{zeroPad(seconds)}\n          </span>\n        </span>\n      );\n    else\n      return (\n        <span>\n          <span className=\"sr-only\">\n            {minutes} minutes and {seconds} seconds\n            remaining\n          </span>\n          <span aria-hidden>\n            {zeroPad(minutes)}:{zeroPad(seconds)}\n          </span>\n        </span>\n      );\n  };\n\n  return (\n    <div className=\"heroblock\">\n      <div className=\"content\">\n        { showVideoBlock && (<TwitchVideoEmbed channel=\"ausspeedruns\" parent={window.location.hostname}/>) }\n        <div className=\"ctaBlock\">\n          <h1>{event.fullName}</h1>\n          <h2>{event.dates}</h2>\n          <h3 className=\"countdown monospaced\">\n            { event.startDate && \n              <Countdown\n                date={Date.parse(event.startDate)}\n                renderer={countdownRender}\n                zeroPadTime={2}\n              />\n            }\n          </h3>\n          <br/>\n          <p>\n            Due to coronavirus restrictions, {event.shortName} will once again be an online only event. The schedule is now live, check it out or join our discord to get involved!\n          </p>\n          <Button actionText=\"Get involved\" link=\"/#participate\" iconRight={ faChevronRight } colorScheme={\"primary lightHover\"}/>\n          {/* {event.website && <Button actionText=\"Buy tickets\" link={event.website} iconRight={ faChevronRight } colorScheme={\"primary inverted\"}/> } */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Heroblock;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport Home from \"./pages/Home/Home\";\nimport Submissions from \"./pages/Submissions/Submissions\";\nimport HeroBlock from \"./components/Heroblock/Heroblock\";\nimport { globals } from \"./globals\";\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const eventLive = false;\n\n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Navbar isLive={eventLive} />\n        </header>\n        <main>\n          <HeroBlock event={globals.events.current} />\n          <Switch>\n            <Route exact path={\"/schedule\"} component={Submissions} />\n            <Route path=\"*\" component={Home} />\n          </Switch>\n        </main>\n        <footer>\n          <Footer />\n        </footer>\n      </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}